server.port=8070
spring.datasource.url=jdbc:mysql://127.0.0.1:3307/projectdb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=admin123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Swagger Configuration
springdoc.swagger-ui.path=/spring-ui.html
springdoc.api-docs.path=/api-docs



#Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true



spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/bookverse-mircoservices-security



spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=spec2871999@gmail.com
spring.mail.password=jzuw xehd sbch evnn
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


spring.security.oauth2.client.registration.google.client-id=154753292800-1rtl5soarqtf3cqnti3p43c047toujpu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}





spring.security.oauth2.client.client-name=Google

#secretkey
application.security.jwt.secret-key=TXlTdXBlclNlY3JldEtleU9ubHlBTEZBTFRleHRIZXJl
application.security.jwt.access-token-expiration=86400000
application.security.jwt.refresh-token-expiration=2592000000

#docker compose configuration
spring.docker.compose.enabled=false
